// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Postech.Hackathon.Agendamentos.Infra.Dados.Contextos;

#nullable disable

namespace Postech.Hackathon.Agendamentos.Infra.Dados.Migracoes
{
    [DbContext(typeof(AgendamentoDbContext))]
    partial class AgendamentoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Postech.Hackathon.Agendamentos.Dominio.Entidades.Agendamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("Ativo");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Criado_Em")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date")
                        .HasColumnName("Data");

                    b.Property<TimeSpan>("HorarioFim")
                        .HasColumnType("time")
                        .HasColumnName("Hora_Fim");

                    b.Property<TimeSpan>("HorarioInicio")
                        .HasColumnType("time")
                        .HasColumnName("Hora_Inicio");

                    b.Property<Guid>("IdMedico")
                        .HasColumnType("uuid")
                        .HasColumnName("Id_Medico");

                    b.Property<Guid?>("IdPaciente")
                        .HasColumnType("uuid")
                        .HasColumnName("Id_Paciente");

                    b.Property<string>("JustificativaCancelamento")
                        .HasMaxLength(60)
                        .HasColumnType("varchar")
                        .HasColumnName("Justificativa_Cancelamento");

                    b.Property<string>("JustificativaRecusa")
                        .HasMaxLength(60)
                        .HasColumnType("varchar")
                        .HasColumnName("Justificativa_Recusa");

                    b.Property<DateTime>("ModificadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Modificado_Em")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar")
                        .HasColumnName("Situacao");

                    b.Property<decimal>("Valor")
                        .HasColumnType("NUMERIC(8,2)")
                        .HasColumnName("Valor");

                    b.HasKey("Id");

                    b.HasIndex("IdMedico", "Data", "Ativo")
                        .HasDatabaseName("ix_tb_agendamentos_id_medico_data_ativo");

                    b.HasIndex("IdPaciente", "Data", "Situacao")
                        .HasDatabaseName("ix_tb_agendamentos_id_paciente_data_situacao");

                    b.ToTable("tb_agendamentos", "agendamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
